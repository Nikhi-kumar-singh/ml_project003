import os
import sys
import numpy as np
import pandas as pd


TARGET_COLUMN="Result"
PIPELINE_NAME="Network_Security"
ARTIFACT_DIR="Artifacts"
FILE_NAME="phisingData.csv"


TRAIN_FILE_NAME="train.csv"
TEST_FILE_NAME="test.csv"


SCHEMA_FILE_PATH=os.path.join("data_schema","schema.yaml")


DATA_INGESTION_COLLECTION_NAME:str="NETWORK_DATA"
DATA_INGESTION_DATABASE_NAME:str="NIKHIL"
DATA_INGESTION_DIR_NAME:str="DATA_INGESTION"
DATA_INGESTION_FEATURE_STORE_DIR:str="FEATURE_STORE"
DATA_INGESTION_INGESTED_DIR:str="INGESTED"
DATA_INGESTION_TRAIN_TEST_SPLIT:float=0.2



DATA_VALIDATION_DIR_NAME:str="data_validation"
DATA_VALIDATION_VALID_DIR:str="validated"
DATA_VALIDATION_INVALID_DIR:str="invalid"
DATA_VALIDATION_DRIFT_REPORT_DIR:str="drift_report"
DATA_VALIDATION_DRIFT_REPORT_FILE_NAME:str="report.yaml"
PREPROCESSING_OBJECT_FILE_NAME:str="preprocessing.pkl"



DATA_TRANSFORMATION_DIR_NAME="data_transformation"
DATA_TRANSFORMATION_TRANSFORMED_DATA_DIR="transformed"
DATA_TRANSFORMATION_TRANSFORMED_OBJECT_DIR="transformed_object"
DATA_TRANSFORMATION_IMPUTER_PARAMS:dict={
    "missing_values":np.nan,
    "n_neighbors":3,
    "weights":"uniform"
}

  

MODEL_TRAINER_DIR_NAME:str ="model_trainer"
MODEL_TRAINER_TRAINED_MODEL_DIR:str ="trained_model"
MODEL_TRAINER_TRAINER_MODEL_NAME:str ="model.pkl"
MODEL_TRAINER_EXPECTED_SCORE:float =0.6
MODEL_TRAINER_OVERFITTING_UNDERFITTING_THRESHOLD:float =0.05


SAVE_MODEL_DIR=os.path.join("saved_models")
MODEL_FILE_NAME="model.pkl"  